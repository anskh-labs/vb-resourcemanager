<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:VBNetCore.Mvvm.Controls;assembly=VBNetCore.Mvvm"
                    xmlns:controls="clr-namespace:VBNetCore.Controls;assembly=VBNetCore.Controls">

    <BooleanToVisibilityConverter x:Key="VisibilityConverter" />

    <ControlTemplate x:Key="ErrorToolTipTemplate_1">
        <ControlTemplate.Resources>
            <Style x:Key="textblockErrorTooltip" TargetType="{x:Type TextBlock}">
                <Setter Property="HorizontalAlignment" Value="Center" />
                <Setter Property="VerticalAlignment" Value="Center" />
                <Setter Property="FontWeight" Value="Bold" />
                <Setter Property="Foreground" Value="GhostWhite" />
                <Setter Property="Margin" Value="10 0 10 0" />
            </Style>
        </ControlTemplate.Resources>
        <DockPanel LastChildFill="true">
            <Border>
                <Border.Style>
                    <Style TargetType="Border">
                        <Setter Property="Height" Value="Auto"/>
                        <Setter Property="Margin" Value="3 0 0 0"/>
                        <Setter Property="CornerRadius" Value="1" />
                        <Setter Property="DockPanel.Dock" Value="Right"/>
                        <Style.Triggers>
                            <DataTrigger 
                                Binding="{Binding ElementName=customAdorner, 
                                Path=AdornedElement.(Validation.Errors).CurrentItem.ErrorContent.Level}"
                                Value="{x:Static local:ErrorLevel.Warning}">
                                <Setter Property="Background" Value="Orange"/>
                            </DataTrigger>
                            <DataTrigger 
                                Binding="{Binding ElementName=customAdorner, 
                                Path=AdornedElement.(Validation.Errors).CurrentItem.ErrorContent.Level}"
                                Value="{x:Static local:ErrorLevel.Error}">
                                <Setter Property="Background" Value="Red"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Border.Style>
                <TextBlock 
                    Style="{StaticResource textblockErrorTooltip}" 
                    Text="{Binding CurrentItem.ErrorContent.Message}" />
            </Border>
            <AdornedElementPlaceholder Name="customAdorner">
                <Border>
                    <Border.Style>
                        <Style TargetType="Border">
                            <Setter Property="BorderThickness" Value="0.5" />
                            <Style.Triggers>
                                <DataTrigger 
                                    Binding="{Binding CurrentItem.ErrorContent.Level}" 
                                    Value="{x:Static local:ErrorLevel.Warning}">
                                    <Setter Property="BorderBrush" Value="Orange" />
                                </DataTrigger>
                                <DataTrigger 
                                    Binding="{Binding CurrentItem.ErrorContent.Level}" 
                                    Value="{x:Static local:ErrorLevel.Error}">
                                    <Setter Property="BorderBrush" Value="Red" />
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Border.Style>
                </Border>
            </AdornedElementPlaceholder>
        </DockPanel>
    </ControlTemplate>
    <Style TargetType="{x:Type controls:InputTextBox}">
        <Setter 
            Property="Validation.ErrorTemplate" 
            Value="{DynamicResource ErrorToolTipTemplate_1}" />
        <Style.Triggers>
            <Trigger Property="Validation.HasError" Value="True">
                <Setter Property="BorderBrush" Value="{x:Null}"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style TargetType="{x:Type PasswordBox}">
        <Setter 
            Property="Validation.ErrorTemplate" 
            Value="{DynamicResource ErrorToolTipTemplate_1}" />
        <Style.Triggers>
            <Trigger Property="Validation.HasError" Value="True">
                <Setter Property="BorderBrush" Value="{x:Null}"/>
            </Trigger>
            <Trigger Property="IsFocused" Value="True">
                <Setter Property="Background" Value="LightYellow"/>
                <Setter Property="Foreground" Value="Maroon" />
            </Trigger>
        </Style.Triggers>
    </Style>
</ResourceDictionary>